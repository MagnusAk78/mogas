# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                                					controllers.ApplicationController.index

# Language actions
GET     /language/:languageString                   		controllers.ApplicationController.changeLanguage(languageString: String)

# Authentication actions
GET     /authentication/signOut                             controllers.ApplicationController.signOut
POST    /authentication/authenticate/:provider              controllers.SocialAuthController.authenticate(provider)
POST    /authentication/signUp                              controllers.SignUpController.submitSignUp
POST    /authentication/signIn								controllers.SignInController.submit
GET     /authentication/signIn                              controllers.SignInController.view
GET     /authentication/signUp                              controllers.SignUpController.view

# User actions
POST    /user/:uuid/submit                                   			    controllers.SignUpController.submitEdit(uuid: String)
GET     /user/:uuid/edit                               			            controllers.SignUpController.edit(uuid: String)
GET     /user/:uuid/show                               						controllers.UserController.show(uuid: String, page: Int=1)
GET     /user/:uuid/show/:page                         						controllers.UserController.show(uuid: String, page: Int)

GET     /users/list                                  						controllers.UserController.list(page: Int=1)
GET     /users/list/:page                            						controllers.UserController.list(page: Int)

# Domain actions
POST    /domain/submit                               						controllers.DomainController.submitCreate
GET     /domain/create                                            			controllers.DomainController.create
POST    /domain/:uuid/submit                               					controllers.DomainController.submitEdit(uuid: String)
GET     /domain/:uuid/edit                           						controllers.DomainController.edit(uuid: String)
GET     /domain/:uuid/show                           						controllers.DomainController.show(uuid: String)
GET     /domain/:uuid/delete                         						controllers.DomainController.delete(uuid: String)

GET     /domain/:uuid/list                           						controllers.DomainController.domain(uuid: String, page: Int=1)
GET     /domain/:uuid/list/:page                           					controllers.DomainController.domain(uuid: String, page: Int)

GET		/domain/:uuid/parseAmlFiles											controllers.DomainController.parseAmlFiles(uuid: String)

GET     /domains/list                                             			controllers.DomainController.list(page: Int=1)
GET     /domains/list/:page													controllers.DomainController.list(page: Int)

GET     /domains/:uuid/changeAllowedUser/:userIdString/:usersPage    		controllers.DomainController.changeAllowedUser(uuid: String, userIdString: String, usersPage: Int)
GET     /domains/:uuid/editAllowedUsers                              		controllers.DomainController.editAllowedUsers(uuid: String, usersPage: Int=1)
GET     /domains/:uuid/editAllowedUsers/:usersPage                   		controllers.DomainController.editAllowedUsers(uuid: String, usersPage: Int)

GET     /domains/editActivateDomain                         				controllers.DomainController.editActiveDomain(page:Int=1)
GET     /domains/editActivateDomain/:page                   				controllers.DomainController.editActiveDomain(page:Int)
GET     /domains/setActivateDomain/:uuid                      				controllers.DomainController.setActiveDomain(uuid: String, page:Int=1)
GET     /domains/setActivateDomain/:uuid/:page                				controllers.DomainController.setActiveDomain(uuid: String, page:Int)

#Hierarchies
GET		/domains/hierarchy/:uuid											controllers.DomainController.hierarchy(uuid: String, page: Int=1)
GET		/domains/hierarchy/:uuid/:page										controllers.DomainController.hierarchy(uuid: String, page: Int)

GET		/domains/element/:uuid												controllers.DomainController.element(uuid: String, elementPage: Int=1, interfacePage: Int=1)
GET		/domains/element/:uuid/:elementPage									controllers.DomainController.element(uuid: String, elementPage: Int, interfacePage: Int=1)
GET		/domains/element/:uuid/:elementPage/:interfacePage					controllers.DomainController.element(uuid: String, elementPage: Int, interfacePage: Int)

GET		/domains/interface/:uuid											controllers.DomainController.interface(uuid: String)

#Instructions
POST    /instruction/submit/:amlObjectUuid                     				controllers.InstructionController.submitCreate(amlObjectUuid: String)
GET     /instruction/create/:amlObjectUuid									controllers.InstructionController.create(amlObjectUuid: String)
POST    /instruction/:uuid/submitedit                     					controllers.InstructionController.submitEdit(uuid: String)
GET     /instruction/:uuid/edit												controllers.InstructionController.edit(uuid: String)
GET     /instruction/:uuid/delete											controllers.InstructionController.delete(uuid: String)
GET     /instruction/:uuid/show                                             controllers.InstructionController.instruction(uuid: String, page: Int=1)
GET     /instruction/:uuid/show/:page                                       controllers.InstructionController.instruction(uuid: String, page: Int)

GET     /instructions/list/                                     			controllers.InstructionController.list(domainUuid: String="", page: Int=1)
GET     /instructions/list/:page											controllers.InstructionController.list(domainUuid: String="", page: Int)
GET     /instructions/list/:page/:domainUuid/								controllers.InstructionController.list(domainUuid: String, page: Int)

POST    /instructionpart/submit/:instructionUuid                     		controllers.InstructionController.submitCreatePart(instructionUuid: String)
GET     /instructionpart/create/:instructionUuid							controllers.InstructionController.createPart(instructionUuid: String)
POST    /instructionpart/:uuid/submit/:page/:mediaType                      controllers.InstructionController.submitEditPart(uuid: String, page: Int, mediaType: String)
GET     /instructionpart/:uuid/edit/:page/:mediaType                        controllers.InstructionController.editPart(uuid: String, page: Int, mediaType: String)
GET     /instructionpart/:uuid/show/:page/:mediaType                        controllers.InstructionController.showPart(uuid: String, page: Int, mediaType: String)
GET     /instructionpart/:uuid/delete                                       controllers.InstructionController.deletePart(uuid: String)
GET    	/instructionpart/:uuid/moveup/:page/:mediaType                      controllers.InstructionController.movePartUp(uuid: String, page: Int, mediaType: String)
GET    	/instructionpart/:uuid/movedown/:page/:mediaType                    controllers.InstructionController.movePartDown(uuid: String, page: Int, mediaType: String)

#Issues
POST    /issue/submit/:amlObjectUuid                     					controllers.IssueController.submitCreate(amlObjectUuid: String)
GET     /issue/create/:amlObjectUuid										controllers.IssueController.create(amlObjectUuid: String)
GET     /issue/:uuid/show                                             		controllers.IssueController.issue(uuid: String, page: Int=1)
GET     /issue/:uuid/show/:page                                       		controllers.IssueController.issue(uuid: String, page: Int)

GET     /issues/list/                                     					controllers.IssueController.list(domainUuid: String="", page: Int=1)
GET     /issues/list/:page													controllers.IssueController.list(domainUuid: String="", page: Int)
GET     /issues/list/:page/domainUuid/										controllers.IssueController.list(domainUuid: String, page: Int)

POST    /issueupdate/submit/:issueUuid                     					controllers.IssueController.submitCreateIssueUpdate(issueUuid: String)
GET    	/issueupdate/create/:issueUuid										controllers.IssueController.createIssueUpdate(issueUuid: String)
POST   	/issueupdate/:uuid/submit                                       	controllers.IssueController.submitEditIssueUpdate(uuid: String)
GET    	/issueupdate/:uuid/edit                                         	controllers.IssueController.editIssueUpdate(uuid: String)
GET    	/issueupdate/:uuid/inspect/:page                                	controllers.IssueController.inspectIssueUpdate(uuid: String, page: Int)

#File stuff
GET     /image/:uuid/standard/:modelType						controllers.FileController.getStandardImage(uuid: String, modelType: String)
GET     /image/:uuid/thumbnail/:modelType 						controllers.FileController.getThumbnailImage(uuid: String, modelType: String)
GET     /image/upload/:uuid/:modelType							controllers.FileController.uploadImage(uuid: String, modelType: String)
POST    /image/:uuid/submitImage/:modelType   					controllers.FileController.submitImage(uuid: String, modelType: String)
GET     /video/:uuid/:modelType 								controllers.FileController.getVideo(uuid: String, modelType: String)
GET     /video/upload/:uuid/:modelType							controllers.FileController.uploadVideo(uuid: String, modelType: String)
POST    /video/:uuid/submitVideo/:modelType   					controllers.FileController.submitVideo(uuid: String, modelType: String)
POST	/domain/:uuid/submitAmlFile								controllers.FileController.submitAmlFile(uuid: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                   	controllers.Assets.at(path="/public/", file)
GET     /webjars/*file                   	controllers.WebJarAssets.at(file)
