# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                                					controllers.ApplicationController.index

# Language actions
GET     /language/:languageString                   		controllers.ApplicationController.changeLanguage(languageString: String)

# Authentication actions
GET     /authentication/signOut                             controllers.ApplicationController.signOut
POST    /authentication/authenticate/:provider              controllers.SocialAuthController.authenticate(provider)
POST    /authentication/signUp                              controllers.SignUpController.submitSignUp
POST    /authentication/signIn								controllers.SignInController.submit
GET     /authentication/signIn                              controllers.SignInController.view
GET     /authentication/signUp                              controllers.SignUpController.view

# Organisation actions
POST    /organisation/submit                                              	controllers.OrganisationController.submitCreate
GET     /organisation/create                                            	controllers.OrganisationController.create
POST    /organisation/:uuid/submit                                        	controllers.OrganisationController.submitEdit(uuid: String)
GET     /organisation/:uuid/edit                                          	controllers.OrganisationController.edit(uuid: String)
GET     /organisation/:uuid/changeAllowedUser/:userIdString/:usersPage    	controllers.OrganisationController.changeAllowedUser(uuid: String, userIdString: String, usersPage: Int)
GET     /organisation/:uuid/editAllowedUsers                              	controllers.OrganisationController.editAllowedUsers(uuid: String, usersPage: Int=1)
GET     /organisation/:uuid/editAllowedUsers/:usersPage                   	controllers.OrganisationController.editAllowedUsers(uuid: String, usersPage: Int)
GET     /organisation/:uuid/delete                                        	controllers.OrganisationController.delete(uuid: String)


GET     /organisations/list                                             	controllers.OrganisationController.list(page: Int=1)
GET     /organisations/list/:page                          					controllers.OrganisationController.list(page: Int)
GET     /organisations/editActivateOrganisation                         	controllers.OrganisationController.editActiveOrganisation(page:Int=1)
GET     /organisations/editActivateOrganisation/:page                   	controllers.OrganisationController.editActiveOrganisation(page:Int)
GET     /organisations/setActivateOrganisation/:uuid                      	controllers.OrganisationController.setActiveOrganisation(uuid: String, page:Int=1)
GET     /organisations/setActivateOrganisation/:uuid/:page                	controllers.OrganisationController.setActiveOrganisation(uuid: String, page:Int)

# User actions
POST    /user/:uuid/submit                                   			    controllers.SignUpController.submitEdit(uuid: String)
GET     /user/:uuid/edit                               			            controllers.SignUpController.edit(uuid: String)
GET     /user/:uuid/show                               						controllers.UserController.show(uuid: String, page: Int=1)
GET     /user/:uuid/show/:page                         						controllers.UserController.show(uuid: String, page: Int)

GET     /users/list                                  						controllers.UserController.list(page: Int=1)
GET     /users/list/:page                            						controllers.UserController.list(page: Int)

# Factory actions
POST    /factory/submit                               						controllers.FactoryController.submitCreate
GET     /factory/create                                            			controllers.FactoryController.create
POST    /factory/:uuid/submit                               				controllers.FactoryController.submitEdit(uuid: String)
GET     /factory/:uuid/edit                           						controllers.FactoryController.edit(uuid: String)
GET     /factory/:uuid/delete                         						controllers.FactoryController.delete(uuid: String)

GET     /factory/:uuid/list                           						controllers.FactoryController.factory(uuid: String, page: Int=1)
GET     /factory/:uuid/list/:page                           				controllers.FactoryController.factory(uuid: String, page: Int)

GET		/factory/:uuid/parseAmlFiles										controllers.FactoryController.parseAmlFiles(uuid: String)

GET     /factories/list                                             		controllers.FactoryController.list(organisationsPage: Int=1)
GET     /factories/list/:page												controllers.FactoryController.list(page: Int)

#Hierarchies
GET		/factories/hierarchy/:uuid											controllers.FactoryController.hierarchy(uuid: String, page: Int=1)
GET		/factories/hierarchy/:uuid/:page									controllers.FactoryController.hierarchy(uuid: String, page: Int)

GET		/factories/element/:uuid											controllers.FactoryController.element(uuid: String, elementPage: Int=1, interfacePage: Int=1)
GET		/factories/element/:uuid/:elementPage								controllers.FactoryController.element(uuid: String, elementPage: Int, interfacePage: Int=1)
GET		/factories/element/:uuid/:elementPage/:interfacePage				controllers.FactoryController.element(uuid: String, elementPage: Int, interfacePage: Int)

GET		/factories/interface/:uuid											controllers.FactoryController.interface(uuid: String)


#File stuff
GET     /image/:uuid/standard/:modelType						controllers.FileController.getStandardImage(uuid: String, modelType: String)
GET     /image/:uuid/thumbnail/:modelType 						controllers.FileController.getThumbnailImage(uuid: String, modelType: String)
GET     /image/upload/:uuid/:modelType							controllers.FileController.uploadImage(uuid: String, modelType: String)
POST    /image/:uuid/submitImage/:modelType   					controllers.FileController.submitImage(uuid: String, modelType: String)
POST	/factory/:uuid/submitAmlFile							controllers.FileController.submitAmlFile(uuid: String)

# Map static resources from the /public folder to the /assets URL path
#GET     /assets/*file               		controllers.Assets.versioned(path="/public", file: Asset)
GET     /assets/*file                   	controllers.Assets.at(path="/public/", file)
GET     /webjars/*file                   	controllers.WebJarAssets.at(file)
